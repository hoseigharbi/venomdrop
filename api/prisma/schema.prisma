// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id          String       @id @default(uuid())
  address     String       @unique
  collections Collection[]
  createdAt   DateTime?    @default(now())
  updatedAt   DateTime?    @updatedAt
}

model AuthNonce {
  id           String   @id @default(uuid())
  address      String
  contractType String
  publicKey    String
  nonce        String   @unique
  expiration   DateTime
}

model Category {
  id          String       @id @default(uuid())
  name        String
  slug        String       @unique
  collections Collection[]
}

model Collection {
  id                      String                     @id @default(uuid())
  ownerId                 String
  owner                   Account                    @relation(fields: [ownerId], references: [id])
  contractAddress         String                     @unique
  name                    String
  slug                    String                     @unique
  description             String
  categoryId              String
  category                Category                   @relation(fields: [categoryId], references: [id])
  logoImageSrc            String?
  coverImageSrc           String?
  featuredImageSrc        String?
  mintStageGroups         CollectionMintStageGroup[]
  createdAt               DateTime?                  @default(now())
  updatedAt               DateTime?                  @updatedAt
  CollectionRevealedToken CollectionRevealedToken[]
}

model CollectionMintStageGroup {
  id           String                @id @default(uuid())
  collectionId String
  collection   Collection            @relation(fields: [collectionId], references: [id])
  mintStages   CollectionMintStage[]
  createdAt    DateTime?             @default(now())
  updatedAt    DateTime?             @updatedAt
  active       Boolean
}

enum MintStageType {
  PUBLIC
  ALLOWLIST
}

model CollectionMintStage {
  id               String                   @id @default(uuid())
  mintStageGroupId String
  mintStageGroup   CollectionMintStageGroup @relation(fields: [mintStageGroupId], references: [id])
  idx              Int
  name             String
  price            Int
  type             MintStageType
  startDate        DateTime
  endDate          DateTime
  allowlistData    Json
}

model CollectionRevealedToken {
  id           String     @id @default(uuid())
  collectionId String
  collection   Collection @relation(fields: [collectionId], references: [id])
  tokenId      Int
  address      String
  name         String?
  imageUrl     String?
  metadataJson Json
  createdAt    DateTime?  @default(now())
  updatedAt    DateTime?  @updatedAt
}
